

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Oct 15 13:53:43 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.42
    20                           ; Generated 13/04/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131                           
   132                           	psect	strings
   133  0003                     __pstrings:	
   134  0003                     stringtab:	
   135  0003                     __stringtab:	
   136  0003                     stringcode:	
   137                           ;	String table - string pointers are 1 byte each
   138                           
   139  0003                     stringdir:	
   140  0003  3000               	movlw	high stringdir
   141  0004  008A               	movwf	10
   142  0005  0804               	movf	4,w
   143  0006  0A84               	incf	4,f
   144  0007  0782               	addwf	2,f
   145  0008                     __stringbase:	
   146  0008  3400               	retlw	0
   147  0009                     __end_of__stringtab:	
   148  0009                     main@text5:	
   149  0009  3431               	retlw	49
   150  000A  3431               	retlw	49
   151  000B  3431               	retlw	49
   152  000C  3431               	retlw	49
   153  000D  3431               	retlw	49
   154  000E  3431               	retlw	49
   155  000F  3431               	retlw	49
   156  0010  3431               	retlw	49
   157  0011  3431               	retlw	49
   158  0012  3431               	retlw	49
   159  0013  3432               	retlw	50
   160  0014  3432               	retlw	50
   161  0015  3432               	retlw	50
   162  0016  3432               	retlw	50
   163  0017  3432               	retlw	50
   164  0018  3432               	retlw	50
   165  0019  3432               	retlw	50
   166  001A  3432               	retlw	50
   167  001B  3432               	retlw	50
   168  001C  3432               	retlw	50
   169  001D  3433               	retlw	51
   170  001E  3433               	retlw	51
   171  001F  3433               	retlw	51
   172  0020  3433               	retlw	51
   173  0021  3433               	retlw	51
   174  0022  3433               	retlw	51
   175  0023  3433               	retlw	51
   176  0024  3433               	retlw	51
   177  0025  3433               	retlw	51
   178  0026  3433               	retlw	51
   179  0027  3434               	retlw	52
   180  0028  3434               	retlw	52
   181  0029  3434               	retlw	52
   182  002A  3434               	retlw	52
   183  002B  3434               	retlw	52
   184  002C  3434               	retlw	52
   185  002D  3434               	retlw	52
   186  002E  3434               	retlw	52
   187  002F  3434               	retlw	52
   188  0030  3434               	retlw	52
   189  0031  3435               	retlw	53
   190  0032  3435               	retlw	53
   191  0033  3435               	retlw	53
   192  0034  3435               	retlw	53
   193  0035  3435               	retlw	53
   194  0036  3435               	retlw	53
   195  0037  3435               	retlw	53
   196  0038  3435               	retlw	53
   197  0039  3435               	retlw	53
   198  003A  3435               	retlw	53
   199  003B  3436               	retlw	54
   200  003C  3436               	retlw	54
   201  003D  3436               	retlw	54
   202  003E  3436               	retlw	54
   203  003F  3436               	retlw	54
   204  0040  3436               	retlw	54
   205  0041  3436               	retlw	54
   206  0042  3436               	retlw	54
   207  0043  3436               	retlw	54
   208  0044  3436               	retlw	54
   209  0045  3437               	retlw	55
   210  0046  3437               	retlw	55
   211  0047  3437               	retlw	55
   212  0048  3437               	retlw	55
   213  0049  3437               	retlw	55
   214  004A  3437               	retlw	55
   215  004B  3437               	retlw	55
   216  004C  3437               	retlw	55
   217  004D  3437               	retlw	55
   218  004E  3437               	retlw	55
   219  004F  3438               	retlw	56
   220  0050  3438               	retlw	56
   221  0051  3438               	retlw	56
   222  0052  3438               	retlw	56
   223  0053  3438               	retlw	56
   224  0054  3438               	retlw	56
   225  0055  3438               	retlw	56
   226  0056  3438               	retlw	56
   227  0057  3438               	retlw	56
   228  0058  3438               	retlw	56
   229  0059  3400               	retlw	0
   230  005A                     __end_ofmain@text5:	
   231  005A                     main@text4:	
   232  005A  344C               	retlw	76
   233  005B  3434               	retlw	52
   234  005C  3420               	retlw	32
   235  005D  342D               	retlw	45
   236  005E  3420               	retlw	32
   237  005F  3443               	retlw	67
   238  0060  347A               	retlw	122
   239  0061  3465               	retlw	101
   240  0062  3473               	retlw	115
   241  0063  3463               	retlw	99
   242  0064  3420               	retlw	32
   243  0065  344B               	retlw	75
   244  0066  3475               	retlw	117
   245  0067  3462               	retlw	98
   246  0068  3461               	retlw	97
   247  0069  3421               	retlw	33
   248  006A  3400               	retlw	0
   249  006B                     __end_ofmain@text4:	
   250  006B                     main@text3:	
   251  006B  344C               	retlw	76
   252  006C  3433               	retlw	51
   253  006D  3420               	retlw	32
   254  006E  342D               	retlw	45
   255  006F  3420               	retlw	32
   256  0070  3443               	retlw	67
   257  0071  347A               	retlw	122
   258  0072  3465               	retlw	101
   259  0073  3473               	retlw	115
   260  0074  3463               	retlw	99
   261  0075  3420               	retlw	32
   262  0076  344B               	retlw	75
   263  0077  3475               	retlw	117
   264  0078  3462               	retlw	98
   265  0079  3461               	retlw	97
   266  007A  3421               	retlw	33
   267  007B  3400               	retlw	0
   268  007C                     __end_ofmain@text3:	
   269  007C                     main@text2:	
   270  007C  344C               	retlw	76
   271  007D  3432               	retlw	50
   272  007E  3420               	retlw	32
   273  007F  342D               	retlw	45
   274  0080  3420               	retlw	32
   275  0081  3443               	retlw	67
   276  0082  347A               	retlw	122
   277  0083  3465               	retlw	101
   278  0084  3473               	retlw	115
   279  0085  3463               	retlw	99
   280  0086  3420               	retlw	32
   281  0087  344B               	retlw	75
   282  0088  3475               	retlw	117
   283  0089  3462               	retlw	98
   284  008A  3461               	retlw	97
   285  008B  3421               	retlw	33
   286  008C  3400               	retlw	0
   287  008D                     __end_ofmain@text2:	
   288  008D                     main@text1:	
   289  008D  344C               	retlw	76
   290  008E  3431               	retlw	49
   291  008F  3420               	retlw	32
   292  0090  342D               	retlw	45
   293  0091  3420               	retlw	32
   294  0092  3443               	retlw	67
   295  0093  347A               	retlw	122
   296  0094  3465               	retlw	101
   297  0095  3473               	retlw	115
   298  0096  3463               	retlw	99
   299  0097  3420               	retlw	32
   300  0098  344B               	retlw	75
   301  0099  3475               	retlw	117
   302  009A  3462               	retlw	98
   303  009B  3461               	retlw	97
   304  009C  3421               	retlw	33
   305  009D  3400               	retlw	0
   306  009E                     __end_ofmain@text1:	
   307  0009                     _PORTE	set	9
   308  0008                     _PORTD	set	8
   309  0006                     _PORTB	set	6
   310  0005                     _PORTA	set	5
   311  0089                     _TRISE	set	137
   312  0088                     _TRISD	set	136
   313  0087                     _TRISC	set	135
   314  0086                     _TRISB	set	134
   315  0085                     _TRISA	set	133
   316  008F                     _OSCCON	set	143
   317  0189                     _ANSELH	set	393
   318  0188                     _ANSEL	set	392
   319                           
   320                           ; #config settings
   321  0000                     
   322                           	psect	cinit
   323  07FC                     start_initialization:	
   324  07FC                     __initialization:	
   325  07FC                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  07FC                     __end_of__initialization:	
   329  07FC  0183               	clrf	3
   330  07FD  120A  118A  2EDF   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:	
   334  0070                     ?_Init:	
   335  0070                     ??_Init:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_lcd_reset:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_lcd_reset:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_lcd_cmd:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_lcd_init:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_lcd_data:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_lcd_data:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_lcd_send_string1:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_lcd_clear:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_main:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_strlen:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     lcd_cmd@cmd:	
   369                           ; 2 bytes @ 0x0
   370                           
   371                           
   372                           ; 2 bytes @ 0x0
   373  0070                     	ds	1
   374  0071                     lcd_data@dat:	
   375                           
   376                           ; 1 bytes @ 0x1
   377  0071                     	ds	1
   378  0072                     ??_strlen:	
   379  0072                     ??_lcd_cmd:	
   380                           ; 1 bytes @ 0x2
   381                           
   382                           
   383                           ; 1 bytes @ 0x2
   384  0072                     	ds	2
   385  0074                     ??_lcd_init:	
   386  0074                     ??_lcd_clear:	
   387                           ; 1 bytes @ 0x4
   388                           
   389                           
   390                           ; 1 bytes @ 0x4
   391  0074                     	ds	2
   392  0076                     strlen@s:	
   393                           
   394                           ; 1 bytes @ 0x6
   395  0076                     	ds	1
   396  0077                     strlen@cp:	
   397                           
   398                           ; 1 bytes @ 0x7
   399  0077                     	ds	1
   400  0078                     ??_lcd_send_string1:	
   401                           
   402                           ; 1 bytes @ 0x8
   403  0078                     	ds	1
   404  0079                     lcd_send_string1@length:	
   405                           
   406                           ; 1 bytes @ 0x9
   407  0079                     	ds	1
   408  007A                     lcd_send_string1@str:	
   409                           
   410                           ; 1 bytes @ 0xA
   411  007A                     	ds	1
   412  007B                     ??_main:	
   413                           
   414                           ; 1 bytes @ 0xB
   415  007B                     	ds	3
   416                           
   417                           	psect	cstackBANK0
   418  0020                     __pcstackBANK0:	
   419  0020                     main@i:	
   420                           
   421                           ; 1 bytes @ 0x0
   422  0020                     	ds	1
   423                           
   424                           	psect	maintext
   425  06DF                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 149 in file "main_LCD.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  i               1    0[BANK0 ] unsigned char 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   445 ;;      Params:         0       0       0       0       0
   446 ;;      Locals:         0       1       0       0       0
   447 ;;      Temps:          3       0       0       0       0
   448 ;;      Totals:         3       1       0       0       0
   449 ;;Total ram usage:        4 bytes
   450 ;; Hardware stack levels required when called:    3
   451 ;; This function calls:
   452 ;;		_Init
   453 ;;		_lcd_clear
   454 ;;		_lcd_init
   455 ;;		_lcd_send_string1
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  06DF                     _main:	
   464                           
   465                           ;main_LCD.c: 150: char i = 0;
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   469  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   470  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   471  06E1  01A0               	clrf	main@i
   472                           
   473                           ;main_LCD.c: 151: const char text1[] = "L1 - Czesc Kuba!";
   474                           ;main_LCD.c: 152: const char text2[] = "L2 - Czesc Kuba!";
   475                           ;main_LCD.c: 153: const char text3[] = "L3 - Czesc Kuba!";
   476                           ;main_LCD.c: 154: const char text4[] = "L4 - Czesc Kuba!";
   477                           ;main_LCD.c: 155: const char text5[] = "111111111122222222223333333333444444444455555555
      +                          55666666666677777777778888888888";
   478                           ;main_LCD.c: 156: Init();
   479  06E2  120A  118A  26A7  120A  118A  	fcall	_Init
   480                           
   481                           ;main_LCD.c: 157: lcd_init();
   482  06E7  120A  118A  2705  120A  118A  	fcall	_lcd_init
   483                           
   484                           ;main_LCD.c: 158: lcd_clear();
   485  06EC  120A  118A  2694  120A  118A  	fcall	_lcd_clear
   486                           
   487                           ;main_LCD.c: 159: _delay((unsigned long)((500)*(8000000UL/4000.0)));
   488  06F1  3006               	movlw	6
   489  06F2  00FD               	movwf	??_main+2
   490  06F3  3013               	movlw	19
   491  06F4  00FC               	movwf	??_main+1
   492  06F5  30AD               	movlw	173
   493  06F6  00FB               	movwf	??_main
   494  06F7                     u397:	
   495  06F7  0BFB               	decfsz	??_main,f
   496  06F8  2EF7               	goto	u397
   497  06F9  0BFC               	decfsz	??_main+1,f
   498  06FA  2EF7               	goto	u397
   499  06FB  0BFD               	decfsz	??_main+2,f
   500  06FC  2EF7               	goto	u397
   501  06FD  2EFE               	nop2
   502                           
   503                           ;main_LCD.c: 160: lcd_send_string1(text1);
   504  06FE  3085               	movlw	(low ((main@text1-__stringbase)| (0+32768)))& (0+255)
   505  06FF  120A  118A  26BE  120A  118A  	fcall	_lcd_send_string1
   506  0704                     l101:	
   507                           ;main_LCD.c: 162: while(1);
   508                           
   509  0704  2F04               	goto	l101
   510  0705                     __end_of_main:	
   511                           ;main_LCD.c: 163: return;
   512                           
   513                           
   514                           	psect	text1
   515  06BE                     __ptext1:	
   516 ;; *************** function _lcd_send_string1 *****************
   517 ;; Defined at:
   518 ;;		line 95 in file "main_LCD.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;  str             1    wreg     PTR unsigned char 
   521 ;;		 -> main@text1(17), 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  str             1   10[COMMON] PTR unsigned char 
   524 ;;		 -> main@text1(17), 
   525 ;;  length          1    9[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         2       0       0       0       0
   537 ;;      Temps:          1       0       0       0       0
   538 ;;      Totals:         3       0       0       0       0
   539 ;;Total ram usage:        3 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    2
   542 ;; This function calls:
   543 ;;		_lcd_data
   544 ;;		_strlen
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _lcd_send_string1
   552  06BE                     _lcd_send_string1:	
   553                           
   554                           ;incstack = 0
   555                           ; Regs used in _lcd_send_string1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   556                           ;lcd_send_string1@str stored from wreg
   557  06BE  00FA               	movwf	lcd_send_string1@str
   558                           
   559                           ;main_LCD.c: 97: char length = strlen(str);
   560  06BF  087A               	movf	lcd_send_string1@str,w
   561  06C0  120A  118A  272D  120A  118A  	fcall	_strlen
   562  06C5  0870               	movf	?_strlen,w
   563  06C6  00F8               	movwf	??_lcd_send_string1
   564  06C7  0878               	movf	??_lcd_send_string1,w
   565  06C8  00F9               	movwf	lcd_send_string1@length
   566  06C9                     l776:	
   567                           ;main_LCD.c: 98: while(length--) lcd_data(*str++);
   568                           
   569  06C9  3001               	movlw	1
   570  06CA  02F9               	subwf	lcd_send_string1@length,f
   571  06CB  0A79               	incf	lcd_send_string1@length,w
   572  06CC  1903               	btfsc	3,2
   573  06CD  0008               	return
   574  06CE  087A               	movf	lcd_send_string1@str,w
   575  06CF  0084               	movwf	4
   576  06D0  120A  118A  2003  120A  118A  	fcall	stringdir
   577  06D5  120A  118A  2757  120A  118A  	fcall	_lcd_data
   578  06DA  3001               	movlw	1
   579  06DB  00F8               	movwf	??_lcd_send_string1
   580  06DC  0878               	movf	??_lcd_send_string1,w
   581  06DD  07FA               	addwf	lcd_send_string1@str,f
   582  06DE  2EC9               	goto	l776
   583  06DF                     __end_of_lcd_send_string1:	
   584                           
   585                           	psect	text2
   586  072D                     __ptext2:	
   587 ;; *************** function _strlen *****************
   588 ;; Defined at:
   589 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  s               1    wreg     PTR const unsigned char 
   592 ;;		 -> main@text1(17), 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  s               1    6[COMMON] PTR const unsigned char 
   595 ;;		 -> main@text1(17), 
   596 ;;  cp              1    7[COMMON] PTR const unsigned char 
   597 ;;		 -> main@text1(17), 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  2    0[COMMON] unsigned int 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         2       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0
   609 ;;      Temps:          4       0       0       0       0
   610 ;;      Totals:         8       0       0       0       0
   611 ;;Total ram usage:        8 bytes
   612 ;; Hardware stack levels used:    2
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_lcd_send_string1
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _strlen
   622  072D                     _strlen:	
   623                           
   624                           ;incstack = 0
   625                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
   626                           ;strlen@s stored from wreg
   627  072D  00F6               	movwf	strlen@s
   628  072E  0876               	movf	strlen@s,w
   629  072F  00F2               	movwf	??_strlen
   630  0730  0872               	movf	??_strlen,w
   631  0731  00F7               	movwf	strlen@cp
   632  0732                     l736:	
   633  0732  0877               	movf	strlen@cp,w
   634  0733  0084               	movwf	4
   635  0734  120A  118A  2003  120A  118A  	fcall	stringdir
   636  0739  3A00               	xorlw	0
   637  073A  1903               	btfsc	3,2
   638  073B  2F41               	goto	l738
   639  073C  3001               	movlw	1
   640  073D  00F2               	movwf	??_strlen
   641  073E  0872               	movf	??_strlen,w
   642  073F  07F7               	addwf	strlen@cp,f
   643  0740  2F32               	goto	l736
   644  0741                     l738:	
   645  0741  0876               	movf	strlen@s,w
   646  0742  00F2               	movwf	??_strlen
   647  0743  3080               	movlw	128
   648  0744  00F3               	movwf	??_strlen+1
   649  0745  09F2               	comf	??_strlen,f
   650  0746  09F3               	comf	??_strlen+1,f
   651  0747  0AF2               	incf	??_strlen,f
   652  0748  1903               	skipnz
   653  0749  0AF3               	incf	??_strlen+1,f
   654  074A  0877               	movf	strlen@cp,w
   655  074B  00F4               	movwf	??_strlen+2
   656  074C  3080               	movlw	128
   657  074D  00F5               	movwf	??_strlen+3
   658  074E  0872               	movf	??_strlen,w
   659  074F  0774               	addwf	??_strlen+2,w
   660  0750  00F0               	movwf	?_strlen
   661  0751  0873               	movf	??_strlen+1,w
   662  0752  1803               	skipnc
   663  0753  0A73               	incf	??_strlen+1,w
   664  0754  0775               	addwf	??_strlen+3,w
   665  0755  00F1               	movwf	?_strlen+1
   666  0756  0008               	return
   667  0757                     __end_of_strlen:	
   668                           
   669                           	psect	text3
   670  0757                     __ptext3:	
   671 ;; *************** function _lcd_data *****************
   672 ;; Defined at:
   673 ;;		line 78 in file "main_LCD.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dat             1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  dat             1    1[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          1       0       0       0       0
   690 ;;      Totals:         2       0       0       0       0
   691 ;;Total ram usage:        2 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_lcd_send_string1
   697 ;;		_lcd_send_string
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _lcd_data
   703  0757                     _lcd_data:	
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   707                           ;lcd_data@dat stored from wreg
   708  0757  00F1               	movwf	lcd_data@dat
   709                           
   710                           ;main_LCD.c: 80: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x20 |0x10);
   711  0758  0871               	movf	lcd_data@dat,w
   712  0759  00F0               	movwf	??_lcd_data
   713  075A  3004               	movlw	4
   714  075B                     u225:	
   715  075B  1003               	clrc
   716  075C  0CF0               	rrf	??_lcd_data,f
   717  075D  3EFF               	addlw	-1
   718  075E  1D03               	skipz
   719  075F  2F5B               	goto	u225
   720  0760  0870               	movf	??_lcd_data,w
   721  0761  390F               	andlw	15
   722  0762  3830               	iorlw	48
   723  0763  1283               	bcf	3,5	;RP0=0, select bank0
   724  0764  1303               	bcf	3,6	;RP1=0, select bank0
   725  0765  0088               	movwf	8	;volatile
   726                           
   727                           ;main_LCD.c: 81: PORTD = (unsigned)(((dat >> 4) & 0x0F) | 0x10);
   728  0766  0871               	movf	lcd_data@dat,w
   729  0767  00F0               	movwf	??_lcd_data
   730  0768  3004               	movlw	4
   731  0769                     u235:	
   732  0769  1003               	clrc
   733  076A  0CF0               	rrf	??_lcd_data,f
   734  076B  3EFF               	addlw	-1
   735  076C  1D03               	skipz
   736  076D  2F69               	goto	u235
   737  076E  0870               	movf	??_lcd_data,w
   738  076F  390F               	andlw	15
   739  0770  3810               	iorlw	16
   740  0771  0088               	movwf	8	;volatile
   741                           
   742                           ;main_LCD.c: 82: PORTD = (unsigned)((dat & 0x0F)|0x20|0x10);
   743  0772  0871               	movf	lcd_data@dat,w
   744  0773  390F               	andlw	15
   745  0774  3830               	iorlw	48
   746  0775  0088               	movwf	8	;volatile
   747                           
   748                           ;main_LCD.c: 83: PORTD = (unsigned)((dat & 0x0F)|0x10);
   749  0776  0871               	movf	lcd_data@dat,w
   750  0777  390F               	andlw	15
   751  0778  3810               	iorlw	16
   752  0779  0088               	movwf	8	;volatile
   753                           
   754                           ;main_LCD.c: 84: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   755  077A  3085               	movlw	133
   756  077B  00F0               	movwf	??_lcd_data
   757  077C                     u407:	
   758  077C  0BF0               	decfsz	??_lcd_data,f
   759  077D  2F7C               	goto	u407
   760                           
   761                           ;main_LCD.c: 85: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
   762  077E  3085               	movlw	133
   763  077F  00F0               	movwf	??_lcd_data
   764  0780                     u417:	
   765  0780  0BF0               	decfsz	??_lcd_data,f
   766  0781  2F80               	goto	u417
   767  0782  0008               	return
   768  0783                     __end_of_lcd_data:	
   769                           
   770                           	psect	text4
   771  0705                     __ptext4:	
   772 ;; *************** function _lcd_init *****************
   773 ;; Defined at:
   774 ;;		line 65 in file "main_LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    1
   795 ;; This function calls:
   796 ;;		_lcd_cmd
   797 ;;		_lcd_reset
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _lcd_init
   805  0705                     _lcd_init:	
   806                           
   807                           ;main_LCD.c: 67: lcd_reset();
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   811  0705  120A  118A  27B2  120A  118A  	fcall	_lcd_reset
   812                           
   813                           ;main_LCD.c: 68: lcd_cmd(0x28);
   814  070A  3028               	movlw	40
   815  070B  00F0               	movwf	lcd_cmd@cmd
   816  070C  3000               	movlw	0
   817  070D  00F1               	movwf	lcd_cmd@cmd+1
   818  070E  120A  118A  2783  120A  118A  	fcall	_lcd_cmd
   819                           
   820                           ;main_LCD.c: 69: lcd_cmd(0x0C);
   821  0713  300C               	movlw	12
   822  0714  00F0               	movwf	lcd_cmd@cmd
   823  0715  3000               	movlw	0
   824  0716  00F1               	movwf	lcd_cmd@cmd+1
   825  0717  120A  118A  2783  120A  118A  	fcall	_lcd_cmd
   826                           
   827                           ;main_LCD.c: 70: lcd_cmd(0x06);
   828  071C  3006               	movlw	6
   829  071D  00F0               	movwf	lcd_cmd@cmd
   830  071E  3000               	movlw	0
   831  071F  00F1               	movwf	lcd_cmd@cmd+1
   832  0720  120A  118A  2783  120A  118A  	fcall	_lcd_cmd
   833                           
   834                           ;main_LCD.c: 71: lcd_cmd(0x80);
   835  0725  3080               	movlw	128
   836  0726  00F0               	movwf	lcd_cmd@cmd
   837  0727  3000               	movlw	0
   838  0728  00F1               	movwf	lcd_cmd@cmd+1
   839  0729  120A  118A  2783   	fcall	_lcd_cmd
   840  072C  0008               	return
   841  072D                     __end_of_lcd_init:	
   842                           
   843                           	psect	text5
   844  07B2                     __ptext5:	
   845 ;; *************** function _lcd_reset *****************
   846 ;; Defined at:
   847 ;;		line 35 in file "main_LCD.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          2       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_lcd_init
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           
   875                           ;psect for function _lcd_reset
   876  07B2                     _lcd_reset:	
   877                           
   878                           ;main_LCD.c: 37: PORTD = 0xFF;
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _lcd_reset: [wreg]
   882  07B2  30FF               	movlw	255
   883  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   884  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   885  07B5  0088               	movwf	8	;volatile
   886                           
   887                           ;main_LCD.c: 38: _delay((unsigned long)((20)*(8000000UL/4000.0)));
   888  07B6  3034               	movlw	52
   889  07B7  00F1               	movwf	??_lcd_reset+1
   890  07B8  30F1               	movlw	241
   891  07B9  00F0               	movwf	??_lcd_reset
   892  07BA                     u427:	
   893  07BA  0BF0               	decfsz	??_lcd_reset,f
   894  07BB  2FBA               	goto	u427
   895  07BC  0BF1               	decfsz	??_lcd_reset+1,f
   896  07BD  2FBA               	goto	u427
   897  07BE  2FBF               	nop2
   898                           
   899                           ;main_LCD.c: 39: PORTD = 0x03 + 0x20;
   900  07BF  3023               	movlw	35
   901  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   902  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   903  07C2  0088               	movwf	8	;volatile
   904                           
   905                           ;main_LCD.c: 40: PORTD = 0x03;
   906  07C3  3003               	movlw	3
   907  07C4  0088               	movwf	8	;volatile
   908                           
   909                           ;main_LCD.c: 41: _delay((unsigned long)((10)*(8000000UL/4000.0)));
   910  07C5  301A               	movlw	26
   911  07C6  00F1               	movwf	??_lcd_reset+1
   912  07C7  30F8               	movlw	248
   913  07C8  00F0               	movwf	??_lcd_reset
   914  07C9                     u437:	
   915  07C9  0BF0               	decfsz	??_lcd_reset,f
   916  07CA  2FC9               	goto	u437
   917  07CB  0BF1               	decfsz	??_lcd_reset+1,f
   918  07CC  2FC9               	goto	u437
   919  07CD  0000               	nop
   920                           
   921                           ;main_LCD.c: 42: PORTD = 0x03 + 0x20;
   922  07CE  3023               	movlw	35
   923  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   924  07D0  1303               	bcf	3,6	;RP1=0, select bank0
   925  07D1  0088               	movwf	8	;volatile
   926                           
   927                           ;main_LCD.c: 43: PORTD = 0x03;
   928  07D2  3003               	movlw	3
   929  07D3  0088               	movwf	8	;volatile
   930                           
   931                           ;main_LCD.c: 44: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   932  07D4  3003               	movlw	3
   933  07D5  00F1               	movwf	??_lcd_reset+1
   934  07D6  3097               	movlw	151
   935  07D7  00F0               	movwf	??_lcd_reset
   936  07D8                     u447:	
   937  07D8  0BF0               	decfsz	??_lcd_reset,f
   938  07D9  2FD8               	goto	u447
   939  07DA  0BF1               	decfsz	??_lcd_reset+1,f
   940  07DB  2FD8               	goto	u447
   941  07DC  2FDD               	nop2
   942                           
   943                           ;main_LCD.c: 45: PORTD = 0x03 + 0x20;
   944  07DD  3023               	movlw	35
   945  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   946  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   947  07E0  0088               	movwf	8	;volatile
   948                           
   949                           ;main_LCD.c: 46: PORTD = 0x03;
   950  07E1  3003               	movlw	3
   951  07E2  0088               	movwf	8	;volatile
   952                           
   953                           ;main_LCD.c: 47: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   954  07E3  3003               	movlw	3
   955  07E4  00F1               	movwf	??_lcd_reset+1
   956  07E5  3097               	movlw	151
   957  07E6  00F0               	movwf	??_lcd_reset
   958  07E7                     u457:	
   959  07E7  0BF0               	decfsz	??_lcd_reset,f
   960  07E8  2FE7               	goto	u457
   961  07E9  0BF1               	decfsz	??_lcd_reset+1,f
   962  07EA  2FE7               	goto	u457
   963  07EB  2FEC               	nop2
   964                           
   965                           ;main_LCD.c: 48: PORTD = 0x02 + 0x20;
   966  07EC  3022               	movlw	34
   967  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   968  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   969  07EF  0088               	movwf	8	;volatile
   970                           
   971                           ;main_LCD.c: 49: PORTD = 0x02;
   972  07F0  3002               	movlw	2
   973  07F1  0088               	movwf	8	;volatile
   974                           
   975                           ;main_LCD.c: 50: _delay((unsigned long)((1)*(8000000UL/4000.0)));
   976  07F2  3003               	movlw	3
   977  07F3  00F1               	movwf	??_lcd_reset+1
   978  07F4  3097               	movlw	151
   979  07F5  00F0               	movwf	??_lcd_reset
   980  07F6                     u467:	
   981  07F6  0BF0               	decfsz	??_lcd_reset,f
   982  07F7  2FF6               	goto	u467
   983  07F8  0BF1               	decfsz	??_lcd_reset+1,f
   984  07F9  2FF6               	goto	u467
   985  07FA  2FFB               	nop2
   986  07FB  0008               	return
   987  07FC                     __end_of_lcd_reset:	
   988                           
   989                           	psect	text6
   990  0694                     __ptext6:	
   991 ;; *************** function _lcd_clear *****************
   992 ;; Defined at:
   993 ;;		line 101 in file "main_LCD.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0
  1009 ;;      Temps:          2       0       0       0       0
  1010 ;;      Totals:         2       0       0       0       0
  1011 ;;Total ram usage:        2 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    1
  1014 ;; This function calls:
  1015 ;;		_lcd_cmd
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _lcd_clear
  1023  0694                     _lcd_clear:	
  1024                           
  1025                           ;main_LCD.c: 103: lcd_cmd(0x01);
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1029  0694  3001               	movlw	1
  1030  0695  00F0               	movwf	lcd_cmd@cmd
  1031  0696  3000               	movlw	0
  1032  0697  00F1               	movwf	lcd_cmd@cmd+1
  1033  0698  120A  118A  2783  120A  118A  	fcall	_lcd_cmd
  1034                           
  1035                           ;main_LCD.c: 104: _delay((unsigned long)((1200)*(8000000UL/4000000.0)));
  1036  069D  3004               	movlw	4
  1037  069E  00F5               	movwf	??_lcd_clear+1
  1038  069F  301C               	movlw	28
  1039  06A0  00F4               	movwf	??_lcd_clear
  1040  06A1                     u477:	
  1041  06A1  0BF4               	decfsz	??_lcd_clear,f
  1042  06A2  2EA1               	goto	u477
  1043  06A3  0BF5               	decfsz	??_lcd_clear+1,f
  1044  06A4  2EA1               	goto	u477
  1045  06A5  0000               	nop
  1046  06A6  0008               	return
  1047  06A7                     __end_of_lcd_clear:	
  1048                           
  1049                           	psect	text7
  1050  0783                     __ptext7:	
  1051 ;; *************** function _lcd_cmd *****************
  1052 ;; Defined at:
  1053 ;;		line 53 in file "main_LCD.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  cmd             2    0[COMMON] int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, btemp+1
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         2       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0
  1069 ;;      Temps:          2       0       0       0       0
  1070 ;;      Totals:         4       0       0       0       0
  1071 ;;Total ram usage:        4 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_lcd_init
  1077 ;;		_lcd_clear
  1078 ;;		_lcd_return_home
  1079 ;;		_lcd_cursor_position
  1080 ;;		_lcd_out
  1081 ;;		_lcd_entry_mode_set
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _lcd_cmd
  1087  0783                     _lcd_cmd:	
  1088                           
  1089                           ;main_LCD.c: 55: PORTD = (unsigned)((cmd >> 4) & 0x000F) | 0x20;
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+btemp+1]
  1093  0783  0871               	movf	lcd_cmd@cmd+1,w
  1094  0784  00F3               	movwf	??_lcd_cmd+1
  1095  0785  0870               	movf	lcd_cmd@cmd,w
  1096  0786  00F2               	movwf	??_lcd_cmd
  1097  0787  3004               	movlw	4
  1098  0788  00FF               	movwf	127
  1099  0789                     u205:	
  1100  0789  0D73               	rlf	??_lcd_cmd+1,w
  1101  078A  0CF3               	rrf	??_lcd_cmd+1,f
  1102  078B  0CF2               	rrf	??_lcd_cmd,f
  1103  078C  0BFF               	decfsz	127,f
  1104  078D  2F89               	goto	u205
  1105  078E  0872               	movf	??_lcd_cmd,w
  1106  078F  390F               	andlw	15
  1107  0790  3820               	iorlw	32
  1108  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0793  0088               	movwf	8	;volatile
  1111                           
  1112                           ;main_LCD.c: 56: PORTD = (unsigned)((cmd >> 4) & 0x000F);
  1113  0794  0871               	movf	lcd_cmd@cmd+1,w
  1114  0795  00F3               	movwf	??_lcd_cmd+1
  1115  0796  0870               	movf	lcd_cmd@cmd,w
  1116  0797  00F2               	movwf	??_lcd_cmd
  1117  0798  3004               	movlw	4
  1118  0799  00FF               	movwf	127
  1119  079A                     u215:	
  1120  079A  0D73               	rlf	??_lcd_cmd+1,w
  1121  079B  0CF3               	rrf	??_lcd_cmd+1,f
  1122  079C  0CF2               	rrf	??_lcd_cmd,f
  1123  079D  0BFF               	decfsz	127,f
  1124  079E  2F9A               	goto	u215
  1125  079F  0872               	movf	??_lcd_cmd,w
  1126  07A0  390F               	andlw	15
  1127  07A1  0088               	movwf	8	;volatile
  1128                           
  1129                           ;main_LCD.c: 57: PORTD = (unsigned)(cmd & 0x000F) | 0x20;
  1130  07A2  0870               	movf	lcd_cmd@cmd,w
  1131  07A3  390F               	andlw	15
  1132  07A4  3820               	iorlw	32
  1133  07A5  0088               	movwf	8	;volatile
  1134                           
  1135                           ;main_LCD.c: 58: PORTD = (unsigned)(cmd & 0x000F);
  1136  07A6  0870               	movf	lcd_cmd@cmd,w
  1137  07A7  390F               	andlw	15
  1138  07A8  0088               	movwf	8	;volatile
  1139                           
  1140                           ;main_LCD.c: 59: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1141  07A9  3085               	movlw	133
  1142  07AA  00F2               	movwf	??_lcd_cmd
  1143  07AB                     u487:	
  1144  07AB  0BF2               	decfsz	??_lcd_cmd,f
  1145  07AC  2FAB               	goto	u487
  1146                           
  1147                           ;main_LCD.c: 60: _delay((unsigned long)((200)*(8000000UL/4000000.0)));
  1148  07AD  3085               	movlw	133
  1149  07AE  00F2               	movwf	??_lcd_cmd
  1150  07AF                     u497:	
  1151  07AF  0BF2               	decfsz	??_lcd_cmd,f
  1152  07B0  2FAF               	goto	u497
  1153  07B1  0008               	return
  1154  07B2                     __end_of_lcd_cmd:	
  1155                           
  1156                           	psect	text8
  1157  06A7                     __ptext8:	
  1158 ;; *************** function _Init *****************
  1159 ;; Defined at:
  1160 ;;		line 23 in file "main_LCD.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           
  1188                           ;psect for function _Init
  1189  06A7                     _Init:	
  1190                           
  1191                           ;main_LCD.c: 24: OSCCON = 0x71;
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _Init: [wreg+status,2]
  1195  06A7  3071               	movlw	113
  1196  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  1197  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  1198  06AA  008F               	movwf	15	;volatile
  1199                           
  1200                           ;main_LCD.c: 25: ANSEL = 0x00;
  1201  06AB  1683               	bsf	3,5	;RP0=1, select bank3
  1202  06AC  1703               	bsf	3,6	;RP1=1, select bank3
  1203  06AD  0188               	clrf	8	;volatile
  1204                           
  1205                           ;main_LCD.c: 26: ANSELH = 0x00;
  1206  06AE  0189               	clrf	9	;volatile
  1207                           
  1208                           ;main_LCD.c: 27: PORTA = PORTB = PORTD = PORTD = PORTE = 0x00;
  1209  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1210  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1211  06B1  0189               	clrf	9	;volatile
  1212  06B2  0188               	clrf	8	;volatile
  1213  06B3  0188               	clrf	8	;volatile
  1214  06B4  0186               	clrf	6	;volatile
  1215  06B5  0185               	clrf	5	;volatile
  1216                           
  1217                           ;main_LCD.c: 28: TRISA = TRISB = TRISC = TRISD = TRISE = 0x00;
  1218  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  1219  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  1220  06B8  0189               	clrf	9	;volatile
  1221  06B9  0188               	clrf	8	;volatile
  1222  06BA  0187               	clrf	7	;volatile
  1223  06BB  0186               	clrf	6	;volatile
  1224  06BC  0185               	clrf	5	;volatile
  1225  06BD  0008               	return
  1226  06BE                     __end_of_Init:	
  1227  007E                     btemp	set	126	;btemp
  1228  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    149
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@text1(CODE[17]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> main@text1(CODE[17]), 

    lcd_send_string1@str	PTR unsigned char  size(1) Largest target is 17
		 -> main@text1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_send_string1
    _lcd_send_string1->_strlen
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1431
                                             11 COMMON     3     3      0
                                              0 BANK0      1     1      0
                               _Init
                          _lcd_clear
                           _lcd_init
                   _lcd_send_string1
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string1                                     3     3      0     300
                                              8 COMMON     3     3      0
                           _lcd_data
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               8     6      2     117
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             2     2      0      88
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     565
                            _lcd_cmd
                          _lcd_reset
 ---------------------------------------------------------------------------------
 (2) _lcd_reset                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0     565
                                              4 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     2      2     565
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _lcd_clear
     _lcd_cmd
   _lcd_init
     _lcd_cmd
     _lcd_reset
   _lcd_send_string1
     _lcd_data
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Oct 15 13:53:43 2017

              lcd_data@dat 0071        lcd_send_string1@str 007A                          pc 0002  
              __CFG_CP$OFF 0000                         fsr 0004                __CFG_LVP$ON 0000  
                      l101 0704                        l736 0732                        l738 0741  
                      l776 06C9                        u205 0789                        u215 079A  
                      u225 075B                        u235 0769                        u407 077C  
                      u417 0780               __CFG_CPD$OFF 0000                        u427 07BA  
                      u437 07C9                        u447 07D8                        u457 07E7  
                      u467 07F6                        u477 06A1                        u397 06F7  
                      u487 07AB                        u497 07AF                        fsr0 0004  
   lcd_send_string1@length 0079                       _Init 06A7               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 06DF                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000              __CFG_MCLRE$ON 0000  
                    ?_Init 0070                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _ANSEL 0188                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089              __CFG_PWRTE$ON 0000            __end_of_lcd_cmd 07B2  
                    main@i 0020          ?_lcd_send_string1 0070             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003         ??_lcd_send_string1 0078  
                    wtemp0 007E            __initialization 07FC               __end_of_Init 06BE  
             __end_of_main 0705                     ??_Init 0070                     ??_main 007B  
                   _ANSELH 0189                     _OSCCON 008F           __end_of_lcd_data 0783  
         __end_of_lcd_init 072D                  ??_lcd_cmd 0072                     _strlen 072D  
  __end_of__initialization 07FC             __pcstackCOMMON 0070         __size_of_lcd_clear 0013  
       __size_of_lcd_reset 004A                 __pmaintext 06DF                    ?_strlen 0070  
                ?_lcd_data 0070                  ?_lcd_init 0070                 __stringtab 0003  
        __end_of_lcd_clear 06A7          __end_of_lcd_reset 07FC  __size_of_lcd_send_string1 0021  
                  __ptext1 06BE                    __ptext2 072D                    __ptext3 0757  
                  __ptext4 0705                    __ptext5 07B2                    __ptext6 0694  
                  __ptext7 0783                    __ptext8 06A7                    _lcd_cmd 0783  
          __size_of_strlen 002A                 ??_lcd_data 0070                 ??_lcd_init 0074  
     end_of_initialization 07FC                    strlen@s 0076          __end_ofmain@text1 009E  
        __end_ofmain@text2 008D          __end_ofmain@text3 007C          __end_ofmain@text4 006B  
        __end_ofmain@text5 005A                 lcd_cmd@cmd 0070             __end_of_strlen 0757  
      start_initialization 07FC   __CFG_FOSC$INTRC_NOCLKOUT 0000           _lcd_send_string1 06BE  
                 ??_strlen 0072                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of_lcd_data 002C          __size_of_lcd_init 0028                  _lcd_clear 0694  
                __pstrings 0003                  _lcd_reset 07B2                   ?_lcd_cmd 0070  
               ?_lcd_clear 0070                 ?_lcd_reset 0070                __stringbase 0008  
                main@text1 008D                  main@text2 007C                  main@text3 006B  
                main@text4 005A                  main@text5 0009         __end_of__stringtab 0009  
         __size_of_lcd_cmd 002F          __CFG_BOR4V$BOR40V 0000                   _lcd_data 0757  
                 _lcd_init 0705   __end_of_lcd_send_string1 06DF              __size_of_Init 0017  
            __size_of_main 0026                ??_lcd_clear 0074                ??_lcd_reset 0070  
                stringcode 0003                   strlen@cp 0077                   stringdir 0003  
                 stringtab 0003  
